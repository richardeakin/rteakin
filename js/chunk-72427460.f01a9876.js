(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-72427460"],{5674:function(e,t,a){},"6e4c":function(e,t,a){"use strict";a.r(t);var i=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"project"},[a("h1",[e._v("Flow Particles")]),e._m(0),a("div",{staticClass:"media"},[a("b-embed",{staticClass:"media",attrs:{type:"iframe",aspect:"16by9",allowfullscreen:"",src:"https://player.vimeo.com/video/146994078"}})],1),e._m(1)])},o=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"topInfo"},[a("p",[e._v(" When: 2015"),a("br"),e._v(" Experiment with the Intel Realsense Depth camera and optical flow."),a("br"),e._v(" While working at "),a("a",{attrs:{href:"https://wearebarbarian.com/"}},[e._v("Barbarian Group")])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("p",[e._v(" GPU particle system that uses a simple physics model and OpenCV's optical flow (Farneback) to add acceleration to the particles. The birth positions come from sampling a depth camera, and although the color buffer is used for calculating optical flow, I still lookup the next position (derived from the flow field) in 3D, which is why some particles are flying at the camera eye. The flow field is smoothed using a convolution filter, sort of a fake 2d fluid sim (we were targeting low end devices and needed to slim down the processing needs, so while something like Navierâ€“Stokes would have probably looked better our approach was dirt cheap). ")]),a("p",[e._v(" Prototyped while doing research for a project I worked on in 2015 at The Barbarian Group, although we ended up not using this approach in the final concept. Built with "),a("a",{attrs:{href:"https://libcinder.org/"}},[e._v("libcinder")]),e._v(". ")])])}],r={},s=r,n=(a("9b0a"),a("2877")),l=Object(n["a"])(s,i,o,!1,null,"7222e884",null);t["default"]=l.exports},"9b0a":function(e,t,a){"use strict";a("5674")}}]);
//# sourceMappingURL=chunk-72427460.f01a9876.js.map