(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-609ff1c5"],{"1fb9":function(e,t,a){e.exports=a.p+"img/space_explosion_single.b12d0f60.jpg"},"22c5":function(e,t,a){e.exports=a.p+"img/space_explosions_many.bb220c06.jpg"},"2f1c":function(e,t,a){e.exports=a.p+"img/intel-tunnel1.f4662689.jpg"},9818:function(e,t,a){e.exports=a.p+"img/space_asteroid.5dcb37c8.gif"},"9d60":function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"project"},[s("h1",[e._v("Intel Tunnel")]),e._m(0),s("b-img",{staticClass:"media",attrs:{src:a("2f1c"),fluid:""}}),e._m(1),s("b-embed",{staticClass:"media",attrs:{type:"iframe",aspect:"16by9",allowfullscreen:"",src:"https://player.vimeo.com/video/143923636"}}),s("div",{staticClass:"content"},[s("h2",[e._v("Hardware")]),s("p",[e._v(" The video wall contained three separate sections that each displayed a 7560x1920 pixel window using NVidia Mosaic, running on dual Quadro K5200 graphics cards. For depth capture, we used 14 RealSense depth cameras (still pre-release at the time of this project) per section, stacking two on top of each other to create a wider vertical field-of-view. The capture feeds were powered by secondary PCs, which filtered the depth, compressed and then sent their streams over CAT5 cables to the main display PC. ")]),s("h2",[e._v("Space Scene")]),s("p",[e._v(" Because we were rendering at 30fps to such a large canvas and there could be dozens of participants interacting with each scene at any given moment, the scene is composed of a few assets that could be loaded at launch or procedural rendering techniques. The main elements were: ")]),e._m(2),s("div",{staticClass:"bottom-images"},[s("b-carousel",{attrs:{id:"carousel-nova",interval:4e3,background:"#ababab","img-width":"800","img-height":"600",fade:""}},[s("b-carousel-slide",{attrs:{"img-src":a("1fb9")}}),s("b-carousel-slide",{attrs:{"img-src":a("22c5")}})],1)],1),s("b-img",{staticClass:"media",attrs:{src:a("9818"),fluid:""}})],1)],1)},i=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"topInfo"},[a("p",[e._v(" When: 2014"),a("br"),e._v(" Agency: "),a("a",{attrs:{href:"http://www.pattenstudio.com/"}},[e._v("Patten Studio")]),e._v(" "),a("br"),e._v(" Role: Graphics Programmer ")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("p",[e._v(" Part of Intel’s booth at CES 2015, we created a 110 foot long interactive video wall comprised of three distinct scenes; Ice, Sand, and Space. The wall lived in a tunnel that gave participants an enriching and playful experience, isolated from the many overwhelming tech booths common to CES. ")]),a("p",[e._v(" I was focused on programming the Space scene, one of my favorite mediums. The scene contained animated gas clouds, interactive stars that followed people's silhouettes in the form of nebulas, and asteroids you could reach out and explode with your hands. ")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("b",[e._v("Background gas clouds - ")]),e._v(" A full-screen artist-created image, then modulated at run-time with FBM noise to animate the clouds. This was the only non-interactive component. ")]),a("li",[a("b",[e._v("Stars - ")]),e._v(" a combination of a static image and a simple particle system with animated point sprites. The animation was done by taking two different star sprites at random and rotating one image against the other in the fragment shader. The interactive particles responded to detected ‘blobs’ that were post-processed from the capture depth buffer. Each star particle chooses a nearby blob, which becomes its attractor, as well as being propelled away from other nearby stars. ")]),a("li",[a("b",[e._v("Nebula (silhouettes) -")]),e._v(" The silhouettes were rendered using a GPU particle system using blurry point sprites. The particles are birthed by mapping the depth buffer into the 3D scene and then randomly looking at depth locations to see if there is something present. Initially, we were attempting to animate the particles using a Navier-Stokes fluid simulation, however we hit performance limitations running at the full canvas size and decided to save that for a future project. ")]),a("li",[a("b",[e._v("Asteroids - ")]),e._v(" we designed a set of full-sized asteroids in Cinema4D, along with a number of smaller ‘shards’ that were used during an explosion. The asteroids were imported and rendered with normal mapping and two directional lights. Participants could wave their hands and cause an asteroid to explode. ")]),a("li",[a("b",[e._v("Supernova -")]),e._v(" When the asteroids explode, they fly off the screen and a supernova light ring emanates across the canvas. This was easily my favorite piece to work on. Each light ring was procedurally rendered on a rotated plane, using noise functions in polar coordinates. ")])])}],n={},o=n,r=(a("dc37"),a("2877")),c=Object(r["a"])(o,s,i,!1,null,"4a1ebde5",null);t["default"]=c.exports},b533:function(e,t,a){},dc37:function(e,t,a){"use strict";a("b533")}}]);
//# sourceMappingURL=chunk-609ff1c5.efd7889d.js.map